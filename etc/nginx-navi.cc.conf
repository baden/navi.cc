
#upstream pingpong {
#	ip_hash;
##	server unix:/var/nginx/uwsgi.sock;
#	server 127.0.0.1:8080;
#}

server {
#    set $user baden;
#    #set $user ubuntu;

        listen 81;
#        listen [::]:80;

        server_name core.navi.cc;
        rewrite     ^ https://core.navi.cc$request_uri? last;
}

server {
	listen   80; ## listen for ipv4; this line is default and implied
#	listen   *:443;				# порт https
#	include  /etc/nginx/ssl.conf;		# подключение конфигурации ssl
	#listen   [::]:80 default ipv6only=on; ## listen for ipv6

#	root /usr/share/nginx/www;
	root /home/baden/SDK/git.navi.cc/www;
	index index.html index.htm;

	# Make site accessible from http://localhost/
	server_name localhost;
	# server_name gps.het.navi.cc;

    expires 1M; # yes one month

    # Static assets
    location ~* ^.+\.(manifest|appcache)$ {
      expires -1;
      #access_log logs/static.log;
    }

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to index.html
		rewrite ^(.*)#.*$ $1;
		try_files $uri $uri.html $uri/ /index.html;
	}

#	location /pong {
#		uwsgi_pass  pingpong;
#		include     uwsgi_params;
#	}


	location ~* /(verify|process|affiliate|auth|login|api|point) {
#	location /process {
#	location /verify {
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Port 80;
		proxy_pass http://localhost:8080;
#		proxy_redirect default;
#		proxy_redirect off;
#		proxy_redirect http://localhost:8000/api/ http://localhost/api/;
	}

	location /doc/ {
		alias /usr/share/doc;
		autoindex on;
		allow 127.0.0.1;
		deny all;
	}

	#error_page 404 /404.html;

	# redirect server error pages to the static page /50x.html
	#
	#error_page 500 502 503 504 /50x.html;
	#location = /50x.html {
	#	root /usr/share/nginx/www;
	#}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	fastcgi_split_path_info ^(.+\.php)(/.+)$;
	#	# NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
	#
	#	fastcgi_pass 127.0.0.1:9000;
	#	fastcgi_index index.php;
	#	include fastcgi_params;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
    add_header "X-UA-Compatible" "IE=Edge,chrome=1";
}


#upstream supervisor {
##	ip_hash;
##	server unix:/var/run/supervisor.sock;
#	server 127.0.0.1:9001;
#}

#server {
#	listen   80; ## listen for ipv4; this line is default and implied
#	server_name supervisord.amazon.navi.cc;
#
#	location / {
#		proxy_pass http://supervisor;
##		proxy_set_header  X-Real-IP  $remote_addr;
#	}
#
#}

#server {
#	listen   80; ## listen for ipv4; this line is default and implied
#	server_name webdav.het.navi.cc;
#
#	location / {
#		proxy_pass http://localhost:8008;
##		proxy_set_header  X-Real-IP  $remote_addr;
#	}
#
#}

#server {
#	listen   80; ## listen for ipv4; this line is default and implied
#	server_name mongodb.het.navi.cc;
#
#	location / {
#		proxy_pass http://localhost:27018;
#		proxy_set_header  X-Real-IP  $remote_addr;
#	}
#}


#server {
#	listen   80; ## listen for ipv4; this line is default and implied
#	server_name mss.het.navi.cc;
#	root /home/baden/mh-web/client;
##	index index.html index.htm;
#
#	location / {
#		try_files $uri $uri/ /index.html;
#	}
#}

# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#	listen 8000;
#	listen somename:8080;
#	server_name somename alias another.alias;
#	root html;
#	index index.html index.htm;
#
#	location / {
#		try_files $uri $uri/ /index.html;
#	}
#}


# HTTPS server
#
#server {
#	listen 443;
#	server_name localhost;
#
#	root html;
#	index index.html index.htm;
#
#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1;
#	ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
#	ssl_prefer_server_ciphers on;
#
#	location / {
#		try_files $uri $uri/ /index.html;
#	}
#}
